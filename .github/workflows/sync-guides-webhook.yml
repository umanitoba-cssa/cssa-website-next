name: Sync Guides (Webhook & Manual)

on:
  repository_dispatch:
    types: [guide-updated]
  workflow_dispatch: # Allow manual triggering

jobs:
  sync-guides:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Sync specific guide (if triggered by repository)
      if: github.event_name == 'repository_dispatch'
      run: |
        if [ -n "${{ github.event.client_payload.guide_repo }}" ]; then
          echo "Syncing specific guide from ${{ github.event.client_payload.guide_repo }}"
          bun run scripts/sync-specific-guide.js "${{ github.event.client_payload.guide_repo }}"
        else
          echo "No specific guide specified, syncing all guides"
          bun run sync-guides
        fi
        
    - name: Sync all guides (if manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: bun run sync-guides
      
    - name: Commit and push changes to main
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        if ! git diff --staged --quiet; then
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            git commit -m "Sync guide from ${{ github.event.client_payload.guide_repo }}"
          else
            git commit -m "Manual sync guides from repositories"
          fi
          git push origin main
        else
          echo "No changes to commit"
          echo "HAS_CHANGES=false" >> $GITHUB_ENV
        fi
        
    - name: Create PR to release branch
      if: env.HAS_CHANGES != 'false'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Sync guides to release',
              head: 'main',
              base: 'release',
              body: `## Guide Sync to Release
              
              This PR contains the latest guide updates synced from external repositories.
              
              **Triggered by:** ${{ github.event_name }}
              ${{ github.event_name == 'repository_dispatch' && format('**Repository:** {0}', github.event.client_payload.guide_repo) || '' }}
              
              Please review the changes and merge when ready to deploy.`,
              draft: false
            });
            
            // Request review from the user
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              reviewers: ['travisfriesen'] // Replace with your GitHub username if different
            });
            
            console.log(`Created PR #${pr.number}: ${pr.html_url}`);
          } catch (error) {
            if (error.message.includes('A pull request already exists')) {
              console.log('PR already exists from main to release');
            } else {
              throw error;
            }
          }
